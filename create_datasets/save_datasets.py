#!/usr/bin/env python3.5
import os
import numpy as np
import pickle


"""
This code should be run after parse_volumes_dataset.py
and before easy_experiments_runner.py
It gets the .pkl files generated by parse_volumes_dataset.py
and saves a single .npz file. It may perform some transformation
on the data too, like rotating it to increase the number of samples,
or separate the 3D volumes in 3 channels 2D slices.
"""


np.random.seed(123)  # for reproducibility


def save_data(x_set, y_set, patients, number):
    if number == 1:
        # Split volumes in slices_per_sample (3) layers images
        counter = 0
        rotations = 4
        normalize = True
        slices_per_sample = 3
        for volume, label, patient in zip(x_set, y_set, patients):
            # Normalize values from 0 to 1
            maxv = np.max(volume)
            minv = np.min(volume)
            if normalize:
                volume = (volume - minv) / (maxv - minv)
            for r in range(rotations):
                # If rotations=4, rotate image 4 times (0, 90, 180 and 270 deg) to increase sample size
                vol = np.rot90(volume, k=r)
                for idx in range(vol.shape[2] - slices_per_sample + 1):
                    image = vol[:, :, idx:idx + slices_per_sample]
                    try:
                        x_dataset = np.concatenate((x_dataset, [image]))
                        y_dataset = np.concatenate((y_dataset, [label]))
                        patients_dataset.append(patient)
                    except NameError:
                        x_dataset = np.array([image])
                        y_dataset = np.array([label])
                        patients_dataset = [patient]
            counter += 1
            print("{} / {} patients processed".format(counter, len(patients)))
        print("Processing finished! Saving data...")
        # Save data
        x = x_dataset
        y = y_dataset
        try:
            os.mkdir("data")
        except OSError:
            pass
        full_path = "data/".format(number)
        folder_path = full_path + "radiomics{}".format(number)
        file_path = "{}/radiomics{}".format(folder_path, number)
        try:
            os.mkdir(folder_path)
        except OSError:
            pass
        np.savez(file_path, x=x, y=y)
        print("Dataset saved in: '{}.npz'".format(file_path))
        with open("{}_patients.pkl".format(file_path), "wb") as f:
            pickle.dump(patients_dataset, f)
        print("Patients saved in '{}_patients.pkl'.".format(file_path))
    else:
        print("Dataset number '{}' unknown, data was not saved".format(number))


if __name__ == "__main__":
    # Load data
    print("Reading 'dataset_images.pkl'")
    with open('dataset_images.pkl', 'rb') as f:
        x = pickle.load(f)
    print("Reading 'dataset_labels.pkl'")
    with open('dataset_labels.pkl', 'rb') as f:
        y = pickle.load(f)
    print("Reading 'dataset_patients.pkl'")
    with open('dataset_patients.pkl', 'rb') as f:
        patients = pickle.load(f)
    # Make sure x and y are the same length
    assert(len(x) == len(y))
    assert(len(x) == len(patients))

    save_data(x, y, patients, number=1)